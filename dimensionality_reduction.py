# -*- coding: utf-8 -*-
"""Dimensionality_Reduction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aLLna9Pm1jioa8mQWOwwE8aTZIlnAfDj
"""

# Install required libraries
!pip install numpy pandas matplotlib seaborn scikit-learn

# Import libraries
import pandas as pd
import numpy as np
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt

# Load your dataset from a CSV file
file_path = "Next_day_pred_AMZN.csv"  # Replace with the actual path to your CSV file
data = pd.read_csv(file_path)

# Display the first few rows of the dataset
data.head()

# Separate features (X) and target variable (y), if applicable
X = data.drop(['Label', 'Avg_Sentiment_Score', 'Date'], axis=1)  # Replace 'target_column' with your target column name, if applicable

# Standardize the data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Perform PCA for dimensionality reduction
pca = PCA()
X_pca = pca.fit_transform(X_scaled)

# Plot the explained variance ratio to determine the number of components
explained_variance_ratio = pca.explained_variance_ratio_
cumulative_explained_variance = np.cumsum(explained_variance_ratio)

plt.plot(range(1, len(cumulative_explained_variance) + 1), cumulative_explained_variance, marker='o', linestyle='--')
plt.title('Explained Variance Ratio')
plt.xlabel('Number of Components')
plt.ylabel('Cumulative Explained Variance')
plt.show()

# Choose the number of components based on the plot or a specific threshold
num_components = 10  # Adjust based on your preference

# Perform PCA with the chosen number of components
pca = PCA(n_components=num_components)
X_pca = pca.fit_transform(X_scaled)

# Convert the reduced data to a DataFrame
columns_pca = [f'PC{i}' for i in range(1, num_components + 1)]
X_pca_df = pd.DataFrame(data=X_pca, columns=columns_pca)

# Display the reduced data
X_pca_df.head()

df = X_pca_df

df['Sentiment_Score'] = data['Avg_Sentiment_Score']

df['Label'] = data['Label']

df

df.to_csv('PCA_14_day_AMZN.csv')

